generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_LOCAL")
}

model User {
  //--------------------------------------------------------
  // Metadata
  id                 Int       @id @default(autoincrement())
  nanoid             String    @unique
  clerkId            String    @unique
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @default(now())
  //--------------------------------------------------------
  // Data
  email              String    @unique
  username           String    @unique
  // Profile Data
  firstName          String?
  lastName           String?
  dateOfBirth        String?
  //
  description        String?
  //
  languages          String[]
  //
  nationalities      String[]
  brStateOfOrigin    String?
  cityOfOrigin       String?
  //
  countryOfResidence String?
  brStateOfResidence String?
  cityOfResidence    String?
  //
  socialsLinks       Json?
  goUsers            Json?
  //
  imageLink          String?
  ratePerHour        Decimal?
  elo                Decimal?
  // Settings
  // theme              String?
  //--------------------------------------------------------
  // Status
  isAdmin            Boolean   @default(false)
  isWriter           Boolean   @default(false)
  isTeacher          Boolean   @default(false)
  isPrivate          Boolean   @default(false)
  //--------------------------------------------------------
  // Relationships
  blackGames         Game[]    @relation("blackPlayer")
  whiteGames         Game[]    @relation("whitePlayer")
  wins               Game[]    @relation("winnerPlayer")
  articles           Article[]
  comments           Comment[]
  purchases          Sale[]
  //--------------------------------------------------------
}

//----------------------------------------------------------
// Games

model Game {
  //--------------------------------------------------------
  // Metadata
  id                  Int         @id @default(autoincrement())
  nanoid              String      @unique
  createdAt           DateTime    @default(now())
  updatedAt           DateTime    @default(now())
  //--------------------------------------------------------
  // Data
  dateTime            DateTime
  // Result
  result              String
  resultColor         String
  resultByResignation Boolean
  resultByPoints      Decimal?
  resultByTime        Boolean     @default(false)
  // Elo
  ranked              Boolean     @default(true)
  isolatedElo         Boolean     @default(false)
  eloBlack            Decimal
  eloDeltaBlack       Decimal
  bonusEloBlack       Decimal?
  eloWhite            Decimal
  eloDeltaWhite       Decimal
  bonusEloWhite       Decimal?
  // Extra Info
  komi                Decimal     @default(6.5)
  rules               String      @default("Japanese")
  handicapStones      Int         @default(0)
  handicapPoints      Decimal     @default(0)
  extraInfo           String?
  sgf                 String?
  ogsLink             String?
  aiSenseiLink        String?
  otherLinks          Json?
  //--------------------------------------------------------
  // Relationships
  winner              User        @relation("winnerPlayer", fields: [winnerId], references: [id])
  winnerId            Int
  black               User        @relation("blackPlayer", fields: [blackId], references: [id])
  blackId             Int
  white               User        @relation("whitePlayer", fields: [whiteId], references: [id])
  whiteId             Int
  tournament          Tournament? @relation(fields: [tournamentId], references: [id])
  tournamentId        Int?
  //--------------------------------------------------------
}

model Tournament {
  //--------------------------------------------------------
  // Metadata
  id              Int      @id @default(autoincrement())
  nanoid          String   @unique
  createdAt       DateTime @default(now())
  updatedAt       DateTime @default(now())
  //--------------------------------------------------------
  // Data
  startTime       DateTime
  endTime         DateTime
  // Links
  link            String?
  otherLinks      Json?
  // Location
  online          Boolean  @default(false)
  locationCountry String?
  locationState   String?
  locationCity    String?
  host            String?
  address         String?
  // Other Data
  pricing         Json?
  //--------------------------------------------------------
  // Relationships
  games           Game[]
  //--------------------------------------------------------
}

//----------------------------------------------------------
// Content

model Article {
  //--------------------------------------------------------
  // Metadata
  id            Int      @id @default(autoincrement())
  nanoid        String   @unique
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now())
  //--------------------------------------------------------
  // Data
  title         String
  content       String
  abstract      String?
  thumbnailLink String?
  isDraft       Boolean  @default(true)
  //--------------------------------------------------------
  // Relationships
  author        User     @relation(fields: [authorId], references: [id])
  authorId      Int
  event         Event?   @relation(fields: [eventId], references: [id])
  eventId       Int?
  //--------------------------------------------------------
}

model Comment {
  //--------------------------------------------------------
  // Metadata
  id          Int      @id @default(autoincrement())
  nanoid      String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  //--------------------------------------------------------
  // Data
  content     String
  //--------------------------------------------------------
  // Relationships
  commenter   User     @relation(fields: [commenterId], references: [id])
  commenterId Int
  //--------------------------------------------------------
}

//----------------------------------------------------------
// Calendar

model Event {
  //--------------------------------------------------------
  // Metadata
  id            Int            @id @default(autoincrement())
  nanoid        String         @unique
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @default(now())
  //--------------------------------------------------------
  // Data
  name          String
  description   String
  //--------------------------------------------------------
  // Relationships
  calendarSlots CalendarSlot[]
  articles      Article[]
  //--------------------------------------------------------
}

model CalendarSlot {
  //--------------------------------------------------------
  // Metadata
  id        Int      @id @default(autoincrement())
  nanoid    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  //--------------------------------------------------------
  // Data
  startTime DateTime
  endTime   DateTime
  name      String?
  //--------------------------------------------------------
  // Relationships
  event     Event?   @relation(fields: [eventId], references: [id])
  eventId   Int?
  //--------------------------------------------------------
}

//----------------------------------------------------------
// Store

model Product {
  //--------------------------------------------------------
  // Metadata
  id             Int      @id @default(autoincrement())
  nanoid         String   @unique
  createdAt      DateTime @default(now())
  updatedAt      DateTime @default(now())
  //--------------------------------------------------------
  // Data
  name           String
  description    String?
  price          Decimal
  isSubscription Boolean  @default(false)
  //--------------------------------------------------------
  // Relationships
  sales          Sale[]
  //--------------------------------------------------------
}

model Sale {
  //--------------------------------------------------------
  // Metadata
  id             Int      @id @default(autoincrement())
  nanoid         String   @unique
  createdAt      DateTime @default(now())
  updatedAt      DateTime @default(now())
  //--------------------------------------------------------
  // Data
  units          Int
  totalPaid      Decimal
  address        String?
  requestMessage String?
  //--------------------------------------------------------
  // Relationships
  purchaser      User     @relation(fields: [purchaserId], references: [id])
  purchaserId    Int
  product        Product  @relation(fields: [productId], references: [id])
  productId      Int
  //--------------------------------------------------------
}

//----------------------------------------------------------
